The 2-matrix_divided module
==========================
Using matrix_divided
_____________________
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> m = [[1, 2, "a"], [4, 5, 6]]
>>> d = 3
>>> matrix_divided(m, d)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(67, 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> m = [[1, 2, 3], [4, 5]]
>>> d = 3
>>> matrix_divided(m, d)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> m = [[1, 2, 3], [4, 5, 6]]
>>> d = 0
>>> matrix_divided(m, d)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> m = [[1, 2, 3], [4, 5, 6]]
>>> d = "x"
>>> matrix_divided(m, d)
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 3
>>> result = matrix_divided(matrix, div)
>>> all(len(str(row[i]).split(".")[1]) <= 2 for row in result for i in range(len(row)))
True
